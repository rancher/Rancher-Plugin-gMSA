name: Release Tag CI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  fossa:
    continue-on-error: true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Read FOSSA token
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/org/rancher/fossa/push token | FOSSA_API_KEY_PUSH_ONLY
      - name: FOSSA scan
        uses: fossas/fossa-action@main
        with:
          api-key: ${{ env.FOSSA_API_KEY_PUSH_ONLY }}
          run-tests: false

  go-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64
        with:
          version: v1.64.7
      - name: go-format
        run: test -z "$(go fmt ./... | tee /dev/stderr)"

  charts-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: validate-charts
        run: ./scripts/validate-charts

  linux-tests:
    needs: [go-validation, charts-validation]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: test-go
        run: ./scripts/test

  windows-tests:
    needs: [go-validation, charts-validation]
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v1
      - name: test-go
        run: bash ./scripts/test

  chart-tests:
    needs: [go-validation, charts-validation]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: test-charts
        run: ./scripts/test-charts

  create-release:
    needs: [linux-tests, windows-tests, chart-tests]
    runs-on: windows-2022
    env:
      REPO: ${{ vars.REPO }}
      CROSS: true
      TAG: ${{ github.ref_name }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write # required for writing release artifacts
      id-token: write # required for vault integration
    steps:
      - uses: actions/checkout@v1
      - name: retrieve dockerhub credentials
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: build-all-binaries
        run: bash ./scripts/build
      - name: package-binaries
        run: bash ./scripts/package
      - name: publish-containers
        run: bash ./scripts/publish
      - name: Create GH Release
        run: gh release create ${{ github.ref_name }} --prerelease --verify-tag --generate-notes (get-item .\dist\*) LICENSE
